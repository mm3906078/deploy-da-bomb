# GitLab CI/CD for Deployment
To set up this solution, you'll need to configure a few environment variables in your GitLab project's settings. You can do this by navigating to Project Settings and adding the following variables:
```
MASTER_SSH_USER: root
MASTER_HOSTS: x.x.x.x y.y.y.y z.z.z.z
MASTER_SSH_PORT: 22
MASTER_SSH_KEY: <FILE>
```
In this example, we have three hosts, and the goal is to deploy our code to all of them using GitLab CI/CD. If you need to deploy to more hosts, simply add their addresses to the MASTER_HOSTS variable.

In the main `.gitlab-ci.yml` file, Iâ€™ve configured the pipeline to pull old images, allowing us to cache them and speed up the deployment process. For deployment, we use a dynamic inventory, which is generated by the `.deployment-ci-configurator` file for the deploy stage.

## How to Rollback
If you need to rollback to a previous commit, you can do so easily through the GitLab UI by selecting the desired commit and clicking to deploy it. This will push the previous version of the code to your servers.

However, for the rollback to work properly, you'll need to save previous build images in your registry. This ensures you can pull and deploy them when necessary.

To keep past images, adjust your [cleanup policies](https://docs.gitlab.com/ee/user/packages/container_registry/reduce_container_registry_storage.html#how-the-cleanup-policy-works) in your GitLab project or repository settings. Make sure to set it to retain at least 5 images, so you can rollback to one of the last five commits if needed.